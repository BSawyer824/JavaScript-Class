<!DOCTYPE html>
<!-- Brandy Sawyer
    JavaScript 252
    Homework: Lab 8 - Pins for every successful log in and for every unsuccesful login.
    It doesn't work but I just can't figure out why!!
-->
<html>
  <head>
    <style type="text/css">
      html, body { height: 100%; margin: 0; padding: 0; }
      #map { height: 100%; }
    </style>
  </head>
  <body>
    <div id="map"></div>

    <script type="text/javascript">
      "use strict";
      var arrMarkers, map;
      arrMarkers = [];

      function initMap() {
        var myLatLngPinecrest = {lat: 38.1885279, lng: -119.9907392};

        var mapOptions = {
            zoom: 2,
            center: new google.maps.LatLng(myLatLngPinecrest)
        };
        map = new google.maps.Map(document.getElementById("map"), mapOptions);

        //this is my test pin to make the map load
        var pin = new google.maps.Marker({
          position: myLatLngPinecrest,
          map: map,
          title: 'Pinecrest Lake'
        });
      }

      //I added the IP address column to the sql statement for the title on the pins
      function setUp_SuccessLogins(){
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/sql/access_log.sqlite', true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function(e) {
          var uInt8Array = new Uint8Array(this.response);
          var db = new SQL.Database(uInt8Array);
          //ip,country_code,country_name,region_code,region_name,city,zipcode,latitude,longitude,metro_code,area_code
          var arrLatLng = db.exec("SELECT DISTINCT IP, Latitude, Longitude FROM access_log WHERE country_name != 'Anonymous Proxy'");
          // contents is now [{columns:['col1','col2',...], values:[[first row], [second row], ...]}]
          marker(arrLatLng[0].values, map);
          };
        xhr.send();
      }

      //this function : setUp_FailedLogins is like the above but it comes from the table I created out of the failed logins in the database
      //I added the IP column to the sql statement to use as the title on the pins.
      function setUp_FailLogins(){
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/sql/access_log.sqlite', true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function(e) {
          var uInt8Array = new Uint8Array(this.response);
          var db = new SQL.Database(uInt8Array);
          //ip,country_code,country_name,region_code,region_name,city,zipcode,latitude,longitude,metro_code,area_code
          var arrLatLng = db.exec("SELECT DISTINCT IP, Latitude, Longitude FROM failed_log");
          // contents is now [{columns:['col1','col2',...], values:[[first row], [second row], ...]}]
          marker(arrLatLng[0].values, map);
          };
        xhr.send();
      }

      //the below marker function, I added the variable arrTitle where I hold the IP address from the SQL statement.
      function marker(arrLatLng, map){
        for(var x = 0; x < arrLatLng.length; x++){
          latlng = new google.maps.LatLng(
              arrLatLng[x][1],
              arrLatLng[x][2]
          );
          var arrTitle = arrLatLng[x][0]
          var pin = new google.maps.Marker({
              position: latlng,
              map: map
              title: arrTitle
          });
          arrMarkers.push(pin);
        }
      }
      function start(){
          initMap();
          setUp_SuccessLogins();
          setUp_FailLogins();
      }
      google.maps.event.addDomListener(window, 'load', start);
    </script>
    <script async defer
      src="https://maps.googleapis.com/maps/api/js?key=mymapkey&callback=initMap">
    </script>
  </body>
</html>
